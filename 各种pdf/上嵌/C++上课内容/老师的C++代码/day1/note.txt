1.C++
	对c语言进行补充
	c语言的语法在c++中是完全可以使用的
	关系：
	c++是c的超集，或者c++包含c

2.回顾c语言
	1.关键字
		数据类型（12）
			signed unsigned 
			void short long char int 
			float double
			struct enum(枚举) union(联盟，联合)
		流程控制（12）
			顺序/分支/循环
			if else switch case default
			for while do
			continue break return goto(转到)
		存储类型和其他的占8个
			auto(自动) regist(注册) volatile(挥发性的，不稳定的) static(静态的)
			typedef const(常量，常数) extern(外面的，外来的) sizeof
	2.运算符
		优先级和结合性
	3.函数和指针
		函数的3要素
			返回值，函数名，参数列表

		函数的编码规范：
			1.函数名必须有意义
			2.一个函数的长度不要超过一个屏幕
		
		指针：存放的是变量的地址
			注意事项：
				1.野指针问题
					（1）未申请空间，赋值
						char *ch;
						strcpy(ch,”hello”);
					（2）释放空间后，赋值
						free(ch);
						strcpy(ch,”hello”);
					
				2.内存泄漏
					char *ch = malloc();	//0x45
					ch = malloc();
				
				3.双释放
					free();
					free();




c++与c不同的地方
	1.c++源文件后缀：
		.cc	(linux)
		.cpp	(window)

	2.c++源文件编译的工具：
		g++
		g++：软件中心/软件包
			sudo apt-get install g++
		g++版本最好和gcc一致
			gcc -v	//看版本

		检测g++是否安装成功
			在终端下，输入g++回车

			如果提示：
				没有输入文件，就表示g++安装成功了

3.一个简单的c++程序
	gedit是一个简单的带界面的文本编辑工具
	gedit a.txt 编辑一个a.txt的文本

	gedit hello.cc &
		&表示脱离终端

	显示行号：
		编辑---首选项---勾选第一个显示行号即可

	#include <iostream>
		c++的输入输出使用的是IO流
		包含了cout类型的定义
	
	using namespace std;
		使用标准的名字空间（namespace）
		包含了一些全局变量的外部声明
		例如：我们下面使用的cout

	cout<< “xxxx”		输出语句
		
		c++			c
	输出：	cout			printf
	输入：	

	c++文件的编译
		g++ hello.cc -o hello


c++的输入和输出
	cout输出：
		1.cout << “haha”
		2.使用特点
	cin输入：
		1.int i;
		   cin >> i; //从键盘输入i
		2.使用特点


练习：小宝参加武林大赛
	获得第一名 当武林盟主
	获得第二名 娶7个老婆
	第三名	踢出师门
	1.通过cin获得小宝的比赛名次
	2.通过cout打印小宝的奖励

名字空间 namespace 
	功能：解决命名冲突
		
程序员A 代码中有个全局变量 int a;
程序员B 代码中有个全局变量 int a;
	如何将A和B写的代码放在一起运行？
	通过名字空间来解决

c++的特有的数据类型bool
	bool 布尔类型
	取值：true/false



	


1.引用------------针对c中的指针提出来的
	定义：
		int I;
		int &a = I;	//a就是变量i的引用

	概念：变量的别名

	功能：和指针一样，能够间接的操作变量。

	特点：
		1.


练习：
	分别用指针和引用完成两个数的交换
	int a = 10;
	int b = 20;
	
	cout << ...;
	swap_point(,)//用于指针交换
	
	cout << ...;
	swap_ref(,)//用于引用交换
	
	cout <<...;

引用比指针优越的地方：
	1.内存：指针占4个字节，引用不占
	2.相对安全：
			char *p;//指针可以不用初始化
			......//在其他代码中p申请的空间可能被释放
			strcpy(p,"xxxx");
			
			int i;
			int &ri = i;
		引用的注意事项：
		1.不要返回局部变量的引用
			int &fun()
			{
				int tmp =10;
				int &remp = rmp;
				return rtmp;	//返回了局部变量的引用
			
			}
			int i = 0;
			i = fun();
			
		2.尽量使用常引用(在不改变实参的时候)
			int i = 12;
			const int &ri = i;
		c++是比较排斥使用指针的(能不用尽量不用)
		
函数的高级应用
	1.内联函数：用inline修饰的函数
		形式：inline void show();
	
一个完整的函数定义：
	[修饰符]	+返回值 + [调用方式] + 函数名 + 参数列表
		[]中的函数元素是可选的
		
		特点：
			1.调用方式和普通函数一样
			2.缩短了编译时间
				普通函数调用的时候，会产生中断，
				函数 A 调用 函数 B 的时候，
				A 函数的执行先中断，等函数B执行完了，
				A 继续执行
				而内联函数调用，会直接用函数体内的语句
				替换调用函数的语句。
			内联函数的函数体：
				1.语句不能超过5句
				2.顺序流程
				
			inline的使用情况：
				
				inline现在基本不再使用，现在的编译器会直接把语句不超过5行的且顺序
				执行的函数当内联函数处理，当不符合上述的函数，即使加上inline，编译
				器也会当一般函数处理
			
		
		2.递归函数：自己调用自己的函数
			函数体组成：
				1.递归公式
				2.函数结束的条件
				
				//1+2+...+100
				void fn(int n)
				{
					if(n >  1)
						return n + fn(n-1);
					else
						return 1;
				}
				
				
				fibonacci
				1 1 2 3 5 8
				求fibonacci数列的第n个位置的值
				
				特点：
					1.函数可读性强
					2.递归层数越多，可能造成栈溢出
					
					
		3.重载函数
			函数名相同，参数列表不同的一系列函数
			
			参数列表不同：
				1.参数个数不同
					void show(int a,int b)
					void show(int a)
				2.参数的数据类型不同
					void show(int a,int b)
					void show(int a,char b)
				3.参数的顺序不同
					void show(int a,char b)
					void show(char a,int b)
					
					注意：void show(int a,int b)
							void show(int c,int d)
						相同的函数，编译器会报错（重定义）
						
						void show(int a,int b)
						int show(int c,int d)
						不是重载函数，相同的函数（重声明）
	
			应用范围：
				对于功能相同或者相似，参数不同的函数，我们一般会做成重载函数。
				
				优点：
					简化了函数命名的问题
					
					
				注意点：
					返回类型不同的函数，不能构成重载函数
					
		
		带形参默认值的函数
				形式：
					void show (int a = 10);
				
				调用方式：
					1.和普通函数调用一致
					2.也可以不传递参数（使用默认值）
					
				引申：
					1.可以给多个参数赋默认值
						void fun(int a = 10,int b = 10,int c = 30);
					调用
						fun();
						fun(110);
						fun(110,120);
						fun(110,120,130);
						
						fun(110,,120);	//error函数没有这种调用方式
						
						//error
						void fun(int a = 10,int b,int c = 30);
						
					默认值的顺序：依次从右到左*********
					参数传递的顺序：依次从左到右
					
					//ok
					void fun(int a,int b = 10,int c = 30);
					fun(10); 10--->a
					
					b和c有默认值，可以不用传递实参			
	
	
	
	
	
	小结：
		1.c++和c的关系
		2.c的基本组成
		3.c++的新特性
			1.iostream endl
			2.cout / cin
			3.namespace	
			4.bool true/false
			5.引用
			6.带默认参数的函数
			  重载函数
			
			备注：
				内联函数/递归函数在c语言中就存在，不是c++特有的
				
				
				
	类 类型
		c语言是面向过程的
			过程----->模块化(函数)编程
		c++做成一个贴近自然的语言
			用c++语言娶描述万事万物
			
			引入 类(数据类型) 的概念
			
	类：种类
			
		种类的组成：(自然语言如何描述？)
							人类
			外部特征：身高，面部特征
			
			行为动作：吃 喝 玩 乐
	
		c++语言如何描述？
		
			变量-----------> 外部特征
			函数------------>行为动作
			通过 类 类型包含变量和函数来整体体现种类的
			
			类的组成：
				成员变量
				成员函数
				
			类的前身 是 结构体 struct
			
			关键字：class
			
			类：表示一类事物的
			对象：一类事物中的某个具体的个体
			
			
				猴子	----->   类   孙悟空------>对象
				总书记------>  类      习大大---->对象
				
				汽车   奥迪       动物    猪
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
		

----------------------------------------------------------------------------------------------------------------------
home work1:
	1.通过今天学习的内容，说说c++比c优越的地方？
		阐述关系：
		c++的新特性：（3-5条即可）
	2.c++与c输入输出的区别？
		
	3.引用和指针的区别？
		内存，初始化，终身制
	4.内联函数和宏定义的区别？
		内联函数会检查参数类型
	5.带默认值的函数能够重载吗？
		不一定
		void fn(int a = 10);
		void fn(int a = 30,int b = 40);
			fn(20)  会产生二义性
	6.初步认识 类 和 对象


	1.c++中用名字空间解决了不同用户定义相同变量名并通过域作用符使用该变量，
		使用了重载函数，简化了函数的命名，使用引用来间接使用变量，相对于c中的指针
		就安全方便多了。
		
	2.c++的输入输出特点：1.自动识别数据类型
						2.连续输入输出
	  c的输入输出特点：1.通过格式控制字符串来识别数据类型
	  				  2.输入(输出)必须与格式控制字符串相对应
	  				  
	  				  
	3.(1)操作引用就相当于操作引用对应的变量本身，指针通过*来间接使用变量
	  (2)引用不占内存空间，而指针占内存
	  (3)引用在定义时必须初始化，而指针可以不初始化
	  (4)引用不能指向0，指针可以有NULL
	  
	 4.内联函数可以有多条语句，而宏定义只有一条语句。
	 	宏定义是在预处理阶段替换，内联函数是在执行函数调用的时候被替换。
	 	
	 5.所谓重载函数，就是函数名相同而参数列表不同的函数，所以带默认值的函数能够重载
	 
	 6.类就是一类事物，是抽象的；而对象是一类事物中的一个，是具体的。
















