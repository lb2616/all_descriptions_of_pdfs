访问修饰符

	作	用：隐藏或保护成员的访问

	例	子：

		一个陌生的女孩子的年龄，会随便告诉你吗？

			访问修饰符限制成员的访问

	种	类：
							访问范围
									
public:	公有访问修饰符			任何地方

protected 受保护的访问修饰符		“类”的内部*****

					这个“类”表示自己所在类及其子类

private:	私有访问修饰符			类的内部


exercise 001

	设计一个  时钟类  有 时/分/秒

		1.显示时间	12：23：59
		2.自动走秒
			每隔一秒 显示一次时间
			并且这个时间能够进位


人为规定的两个函数
	
	setXXXX（）  /  getXXXXX（）

		1.set/get成员函数一般都是公有的
		2.对 私有变量 进行操作

类中默认提供的特殊成员

	1.构造函数	

		作  	用：

			给成员变量分配空间和初始化

		特	征：
			1.没有返回值
			2.函数名和类名相同
			3.可以带参数
			4.在创建对象的时候，会自动调用
			5.一般是公有访问权限

		初始化成员的实现：

			通过初始化列表实现，初始列表在构造函数
			参数列表之后，用：隔开的

		初始化列表的形式：

		成员变量1(形参)1，成员变量2(形参2)，。。。。

		为什么要使用初始化列表？

			有些成员变量是必须初始化的

				const修饰的变量
				引用

	2.析构函数  ： 构造函数的逆操作

		作  	用：

			释放成员变量的空间  --- 系统自动完成

		特	征：
			1.没有返回值
			2.函数名和类名相同，函数名之前用～修饰
			3.不可以带参数
			4.对象消亡的时候，会自动调用
			5.一般是公有访问权限



赋值和初始化的区别

		int i = 10;  //  初始化：定义变量并赋值
				  
		int i;
		i = 10;	  //  赋值

	3.this 指针   ---- 每个对象都有这么一个成员变量

		存放的是当前对象的地址

		*this  当前对象


	小结：

		当用户(程序员)设计的一个类中没有构造函数
		和析构函数的时候，系统会默认提供

			无参的构造函数
			析构函数

		当用户手写 构造函数和析构函数，那么系统
		就不再提供了

		一般为了提高编译效率，构造函数和析构函数
		都会手写，即使没有函数体内没有任何实现


exercise 002

	设计一个分数类  Fraction

		这个类包含  分子  分母

	1.通过构造函数，设置 分子和分母的值
	2.打印分式   print()  形式：2 / 3
	3.约分	   redu()  12 / 16   ---->  3 / 4	

	12 16
	范围：[1,12]
	1 2 4
	
	从后先前遍历，第一能同时被12和16整除的数
	一定是 它们的最大公约数

exercise 003

	设计一个日期类   Date

		年  月  日

	1.通过构造函数，设置 年 / 月 / 日的值
	2.打印分式   print()  形式：2014-08-05
	3.判断闰年   bool isLeapYear()  
	4.求  2014-08-05 这一天 是 今年的第 多少 天
		int DayOfYear()


	4.拷贝构造函数

	函数形式（例如）：

			Test(Test &t)

	作	用：

		允许用户(程序员)用一个已有对象去
		创建新的对象

类的形式：

	class 类名
	{
	访问修饰符：

		成员变量
	
			this  隐含的成员变量

		成员函数
			构造函数
			拷贝构造函数
			析构函数
	}

	对象的创建 ：1.通过参数列表
			    2. 已有对象

				A a;
				A a1 = a;  形式一
				A a2(a);	 形式二

	形式一和形式二是等价的，他们都会调用
			拷贝构造函数	

	多个对象构造和析构顺序

		先构造的对象，最后析构 

	构造函数和析构函数调用的时间点


exercise 004

	为某游戏公司设计一款游戏中的怪物类

		怪物的属性

			1.名字
			2.生命力
			3.攻击力
			4.防御力

		怪物的攻击行为

			目的：让对方减少血量
		
			1.伤害值：
				
(自己的攻击力*2 -  对方的防御力 + 5）*2

	如果 这个伤害值 < 1,设置 伤害值为1		

			2.描述攻击过程

	例如： 怪物A攻击 怪物B，让B掉了多少点血



	设计完成之后，大家创建2个怪物

	让这2个怪物对打（回合值），其中一个怪物

	的生命值 <=0 ,战斗结束
	





=================================

home work 001

	设计一个定时炸弹类

		1.可以设置 定时炸弹 的时间

		2.炸弹到00：00：00的时候爆炸

			Bomb~~~~~~~~~~~~~

home work 002

	升级 Fract 类

		1.处理分母为0的情况

		2.处理符号问题

			4 / -3   改成   -  4 / 3

		3.处理假分式
		
			3 / 1    改成    3

home work 003

	分析 order.cc 














			
